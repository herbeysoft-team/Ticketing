import React, { createRef, useState } from 'react';
import { FlatList, StyleSheet, TouchableOpacity } from 'react-native';
import moment from 'moment-jalaali';
import SelectedDate from './components/Selected';
import UnSelectedDate from './components/UnSelected';
import { enumerateDaysBetweenDates } from './utils/helper';

const HorizontalDatepicker = ({
  mode,
  startDate,
  endDate,
  onSelectedDateChange,
  initialSelectedDate,
  selectedItemWidth = 170,
  unselectedItemWidth = 38,
  itemHeight = 38,
  itemRadius = 10,
  selectedItemTextStyle,
  unselectedItemTextStyle,
  selectedItemBackgroundColor,
  unselectedItemBackgroundColor,
  flatListContainerStyle
}) => {
  const [selectedDate, setSelectedDate] = useState(moment(initialSelectedDate).format('YYYY-MM-DD')); // Ref used to handle scroll to specific index

  const listRef = /*#__PURE__*/createRef(); // use modern month names in jalali mode

  if (mode === 'jalali') {
    moment.loadPersian({
      dialect: 'persian-modern'
    });
  } // format to show date in jalali mode


  const jFormat = 'ddddØŒ jD jMMMM'; // format to show date in gregorian mode

  const grFormat = 'dddd, MMM D'; // get dates between startDate and endDate

  const results = enumerateDaysBetweenDates(startDate, endDate); // handle press on date item, set selectedDate and call onSelectedDateChange with Date constractor

  const onDateItemPress = (item, index) => {
    var _listRef$current;

    setSelectedDate(item);
    onSelectedDateChange(new Date(item));
    (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollToIndex({
      animated: true,
      index: index,
      viewPosition: 0.5
    });
  }; // render Date items here


  const renderItem = ({
    item,
    index
  }) => /*#__PURE__*/React.createElement(TouchableOpacity, {
    onPress: () => onDateItemPress(item, index)
  }, selectedDate === item ? /*#__PURE__*/React.createElement(SelectedDate, {
    text: moment(item).locale(mode === 'jalali' ? 'fa' : 'en').format(mode === 'jalali' ? jFormat : grFormat),
    selectedItemWidth: selectedItemWidth,
    selectedItemTextStyle: selectedItemTextStyle,
    selectedItemBackgroundColor: selectedItemBackgroundColor,
    itemRadius: itemRadius,
    itemHeight: itemHeight
  }) : /*#__PURE__*/React.createElement(UnSelectedDate, {
    text: moment(item).locale(mode === 'jalali' ? 'fa' : 'en').format(mode === 'jalali' ? 'jD' : 'DD'),
    unselectedItemBackgroundColor: unselectedItemBackgroundColor,
    unselectedItemTextStyle: unselectedItemTextStyle,
    unselectedItemWidth: unselectedItemWidth,
    itemRadius: itemRadius,
    itemHeight: itemHeight
  }));

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FlatList, {
    horizontal: true,
    showsHorizontalScrollIndicator: false,
    data: results,
    scrollEventThrottle: 16,
    keyExtractor: (date, index) => "".concat(date + index),
    contentContainerStyle: [styles.flatListStyle, flatListContainerStyle] // invert flatlist when mode is jalali
    ,
    initialScrollIndex: 0,
    inverted: mode === 'jalali',
    ref: listRef,
    renderItem: renderItem,
    getItemLayout: (_, index) => ({
      length: itemHeight,
      offset: unselectedItemWidth * (index + 1) + 40,
      index
    })
  }));
};

const styles = StyleSheet.create({
  flatListStyle: {
    backgroundColor: '#f5f5f5',
    height: 58,
    alignItems: 'center'
  }
});
export default HorizontalDatepicker;
//# sourceMappingURL=index.js.map